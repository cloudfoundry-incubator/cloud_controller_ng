### Create a service instance

```
Example Request for Managed Service Instance
```

```shell
curl "https://api.example.org/v3/service_instances" \
  -X POST \
  -H "Authorization: bearer [token]" \
  -H "Content-type: application/json" \
  -d '{
    "type": "managed",
    "name": "my_service_instance",
    "parameters": {
      "foo": "bar",
      "baz": "qux"
    },
    "tags": ["foo", "bar", "baz"],
    "metadata": {
      "annotations": {
        "foo": "bar"
      },
      "labels": {
        "baz": "qux"
      }
    },
    "relationships": {
      "space": {
        "data": {
          "guid": "7304bc3c-7010-11ea-8840-48bf6bec2d78"
        }
      },
      "service_plan": {
        "data": {
          "guid": "e0e4417c-74ee-11ea-a604-48bf6bec2d78"
        }
      }
    }
  }'
```

```
Example Response for Managed Service Instance
```

```http
HTTP/1.1 202 Accepted
Content-Type: application/json
Location: https://api.example.org/v3/jobs/af5c57f6-8769-41fa-a499-2c84ed896788
```

```
Example Request for User-Provided Service Instance
```

```shell
curl "https://api.example.org/v3/service_instances" \
  -X POST \
  -H "Authorization: bearer [token]" \
  -H "Content-type: application/json" \
  -d '{
    "type": "user-provided",
    "name": "my_service_instance",
    "credentials": {
      "foo": "bar",
      "baz": "qux"
    },
    "tags": ["foo", "bar", "baz"],
    "syslog_drain_url": "https://syslog.com/drain",
    "route_service_url": "https://route.com/service",
    "metadata": {
      "annotations": {
        "foo": "bar"
      },
      "labels": {
        "baz": "qux"
      }
    },
    "relationships": {
      "space": {
        "data": {
          "guid": "7304bc3c-7010-11ea-8840-48bf6bec2d78"
        }
      }
    }
  }'
```

```
Example Response for User-Provided Service Instance
```

```http
HTTP/1.1 201 Created
Content-Type: application/json

<%= yield_content :single_user_provided_service_instance, labels: { "baz" => "qux" }, annotations: {"foo" => "bar"} %>
```

This endpoint creates a new service instance. Service instances can be of type `managed` or `user-provided`, and
the required parameters are different for each type.

#### Definition
`POST /v3/service_instances`

#### Required parameters for managed service instance

Name | Type | Description
---- | ---- | -----------
**type** | _string_ | Must be `managed`.
**name** | _string_ | Name of the service instance.
**relationships.space** | [_to-one relationship_](#to-one-relationships) | The space in which to create the service instance.
**relationships.service_plan** | [_to-one relationship_](#to-one-relationships) | The service plan from which to create the service instance.

#### Optional parameters for managed service instance

Name | Type | Description |
---- | ---- | ----------- |
**tags** | _array of strings_ | Tags are used by apps to identify service instances. They are shown in the app VCAP_SERVICES env.
**parameters** | _object_ | A JSON object that is passed to the service broker.
**metadata.labels** | [_label object_](#labels) | Labels applied to the service broker.
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the service broker.

#### Required parameters for user-provided service instance

Name | Type | Description
---- | ---- | -----------
**type** | _string_ | Must be `user-provided`.
**name** | _string_ | Name of the service instance.
**relationships.space** | [_to-one relationship_](#to-one-relationships) | The space in which to create the service instance.

#### Optional parameters for user-provided service instance

Name | Type | Description |
---- | ---- | ----------- |
**tags** | _array of strings_ | Tags are used by apps to identify service instances. They are shown in the app VCAP_SERVICES env.
**credentials** | _object_ | A JSON object that is made available to apps bound to this service instance.
**syslog_drain_url** | _string_ | URL to which logs for bound applications will be streamed.
**route_service_url** | _string_ | URL to which requests for bound routes will be forwarded. Must use the `https` protocol.
**metadata.labels** | [_label object_](#labels) | Labels applied to the service broker.
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the service broker.

#### Permitted roles
 |
--- | ---
Admin |
Space Developer |
